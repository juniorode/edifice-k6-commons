(function(a,n){typeof exports=="object"&&typeof module<"u"?n(exports,require("k6/http"),require("k6"),require("https://jslib.k6.io/formdata/0.0.2/index.js")):typeof define=="function"&&define.amd?define(["exports","k6/http","k6","https://jslib.k6.io/formdata/0.0.2/index.js"],n):(a=typeof globalThis<"u"?globalThis:a||self,n(a["edifice-k6-commons"]={},a.http,a.k6,a.index_js))})(this,function(a,n,l,S){"use strict";var P=Object.defineProperty;var X=(a,n,l)=>n in a?P(a,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[n]=l;var m=(a,n,l)=>(X(a,typeof n!="symbol"?n+"":n,l),l);const h={COOKIE:0,OAUTH2:1};class ${constructor(e,o,s,r){m(this,"expiresAt");m(this,"token");m(this,"mode");m(this,"cookies");this.token=e,this.mode=o,this.cookies=r,this.expiresAt=Date.now()+s*1e3-3e3}isExpired(){return this.expiresAt<=Date.now()}getCookie(e){return this.cookies?this.cookies.filter(o=>o.name===e).map(o=>o.value)[0]:null}}const R=__ENV.BASE_URL,_=30*60,y=__ENV.ROOT_URL,u=function(t){let e;return t?t.mode===h.COOKIE?e={"x-xsrf-token":t.getCookie("XSRF-TOKEN")||""}:t.mode===h.OAUTH2?e={Authorization:`Bearer ${t.token}`}:e={}:e={},e},w=function(t,e){const o=n.get(`${y}/conversation/visible?search=${t}`,{headers:u(e)});return l.check(o,{"should get an OK response":r=>r.status==200}),o.json("users")[0].id},N=function(t){const e=n.get(`${y}/auth/oauth2/userinfo`,{headers:u(t)});return l.check(e,{"should get an OK response":o=>o.status==200,"should get a valid userId":o=>!!o.json("userId")}),e.json("userId")},j=function(t,e){let o={email:t,password:e,callBack:"",detail:""};const s=n.post(`${y}/auth/login`,o,{redirects:0});l.check(s,{"should redirect connected user to login page":c=>c.status===302,"should have set an auth cookie":c=>c.cookies.oneSessionId!==null&&c.cookies.oneSessionId!==void 0}),n.cookieJar().set(y,"oneSessionId",s.cookies.oneSessionId[0].value);const i=Object.keys(s.cookies).map(c=>({name:c,value:s.cookies[c][0].value}));return new $(s.cookies.oneSessionId[0].value,h.COOKIE,_,i)},C=function(t,e,o,s){let r={grant_type:"password",username:t,password:e,client_id:o,client_secret:s,scope:"timeline userbook blog lvs actualites pronote schoolbook support viescolaire zimbra conversation directory homeworks userinfo workspace portal cas sso presences incidents competences diary edt infra auth"},i=n.post(`${y}/auth/oauth2/token`,r,{redirects:0});l.check(i,{"should get an OK response for authentication":d=>d.status==200,"should have set an access token":d=>!!d.json("access_token")});const c=i.json("access_token");return new $(c,h.OAUTH2,i.json("expires_in"))};function A(t,e){const o=(e||[]).map(s=>s.id);for(let s=0;s<1e3;s++){const r=t[Math.floor(Math.random()*t.length)];if(o.indexOf(r.id)<0)return r}throw"cannot.find.random.user"}const E=function(t,e){const o=n.get(`${R}/metrics`,{headers:u(e)});l.check(o,{"should get an OK response":r=>r.status==200});const s=o.body.split(`
`);for(let r of s)if(r.indexOf(`${t} `)===0)return parseFloat(r.substring(t.length+1).trim());return console.error("Metric",t,"not found"),null},f=__ENV.ROOT_URL;function k(t,e){let o=n.get(`${f}/directory/structure/admin/list`,{headers:u(e)});return JSON.parse(o.body).filter(s=>s.name===t)[0]}function B(t,e){let o=n.get(`${f}/directory/structure/${t.id}/users`,{headers:u(e)});if(o.status!==200)throw`Impossible to get users of ${t.id}`;return JSON.parse(o.body)}function J(t,e){let o=n.get(`${f}/directory/structure/${t.id}/users`,{headers:u(e)});o.status!=200&&l.fail(`Cannot fetch users of structure ${t.id} : ${o}`);const s=JSON.parse(o.body);for(let r=0;r<s.length;r++){const i=s[r];T(i)}}function T(t){if(t.code){const e={};e.login=t.login,e.activationCode=t.code,e.password="password",e.confirmPassword="password",e.acceptCGU="true";const o=n.post(`${f}/auth/activation`,e,{redirects:0,headers:{Host:"localhost"}});o.status!==302&&l.fail(`Could not activate user ${t.login} : ${o}`)}}function F(t,e,o,s){const i=U(t.id,s).filter(c=>o.indexOf(c.name)>=0);for(let c of i)if(c.roles.indexOf(e.name)>=0)console.log("Role already attributed to teachers");else{const d=u(s);d["content-type"]="application/json";const g={headers:d},p=JSON.stringify({groupId:c.id,roleIds:(c.roles||[]).concat([e.id])}),I=n.post(`${f}/appregistry/authorize/group?schoolId=${t.id}`,p,g);l.check(I,{"link role to structure":W=>W.status==200})}}function G(t,e,o){let s=k(t,o);if(s)console.log("School already exists");else{const r=new S.FormData;r.append("type","CSV"),r.append("structureName",t);let i,c,d;"teachers"in e?(i=e.teachers,c=e.students,d=e.responsables):i=e,r.append("Teacher",n.file(i,"enseignants.csv")),c&&r.append("Student",n.file(c,"eleves.csv")),d&&r.append("Relative",n.file(d,"responsables.csv"));const g=u(o);g["Content-Type"]="multipart/form-data; boundary="+r.boundary;const p={headers:g};n.post(`${f}/directory/wizard/import`,r.body(),p).status!=200&&l.fail(`Could not create structure ${t}`),s=k(t,o)}return s}function V(t,e,o){const s=new S.FormData;s.append("type","CSV"),s.append("structureName",t.name),s.append("structureId",t.id),s.append("structureExternalId",t.externalId);let r,i,c;"teachers"in e?(r=e.teachers,i=e.students,c=e.responsables):r=e,s.append("Teacher",n.file(r,"enseignants.csv")),i&&s.append("Student",n.file(i,"eleves.csv")),c&&s.append("Relative",n.file(c,"responsables.csv"));const d=u(o);d["Content-Type"]="multipart/form-data; boundary="+s.boundary;const g={headers:d};return n.post(`${f}/directory/wizard/import`,s.body(),g)}function b(t,e,o){const s=u(o);s["content-type"]="application/json";let r=n.get(`${f}/directory/group/admin/list?translate=false&structureId=${e.id}`,{headers:s});return JSON.parse(r.body).filter(i=>i.subType==="BroadcastGroup"&&i.name===t)[0]}function K(t,e,o){let s=b(t,e,o);if(s)console.log("Broadcast group already existed");else{console.log("Creating broadcast group");const r=u(o);r["content-type"]="application/json";let i=JSON.stringify({name:t,structureId:e.id,subType:"BroadcastGroup"}),c=n.post(`${f}/directory/group`,i,{headers:r});l.check(c,{"create broadcast group":p=>p.status===201});const d=JSON.parse(c.body).id;i=JSON.stringify({name:t,autolinkTargetAllStructs:!0,autolinkTargetStructs:[],autolinkUsersFromGroups:["Teacher"]}),c=n.put(`${f}/directory/group/${d}`,i,{headers:r}),l.check(c,{"set broadcast group for teachers":p=>p.status===200});const g=M(e,o).id;c=n.post(`${f}/communication/v2/group/${g}/communique/${d}`,"{}",{headers:r}),l.check(c,{"open comm rule for broadcast group for teachers":p=>p.status===200}),s=b(t,e,o)}return s}function M(t,e){return U(t.id,e).filter(s=>s.name===`Teachers from group ${t.name}.`||s.name===`Enseignants du groupe ${t.name}.`)[0]}const O=__ENV.ROOT_URL;function v(t,e){let o=n.get(`${O}/appregistry/roles`,{headers:u(e)});return JSON.parse(o.body).filter(r=>r.name===t)[0]}function H(t,e){const o=`${t} - All - Stress Test`;let s=v(o,e);if(s)console.log(`Role ${o} already existed`);else{let r=n.get(`${O}/appregistry/applications/actions?actionType=WORKFLOW`,{headers:u(e)});l.check(r,{"get workflow actions":p=>p.status==200});const c=JSON.parse(r.body).filter(p=>p.name===t)[0].actions.map(p=>p[0]),d=u(e);d["content-type"]="application/json";const g={role:o,actions:c};r=n.post(`${O}/appregistry/role`,JSON.stringify(g),{headers:d}),console.log(r),l.check(r,{"save role ok":p=>p.status==201}),s=v(o,e)}return s}function U(t,e){let o=n.get(`${O}/appregistry/groups/roles?structureId=${t}`,{headers:u(e)});return l.check(o,{"get structure roles should be ok":s=>s.status==200}),JSON.parse(o.body)}const D=__ENV.ROOT_URL;function L(t,e){let o=u(e);const s=new S.FormData;s.append("file",n.file(t,"file.txt")),o["Content-Type"]="multipart/form-data; boundary="+s.boundary;let r=n.post(`${D}/workspace/document`,s.body(),{headers:o});return l.check(r,{"upload doc ok":i=>i.status===201}),JSON.parse(r.body)}const z=__ENV.ROOT_URL;function q(t,e,o){const s=u(o);s["content-type"]="application/json";const r=JSON.stringify(e);return n.put(`${z}/workspace/share/resource/${t}`,r,{headers:s})}a.BASE_URL=R,a.Session=$,a.SessionMode=h,a.activateUser=T,a.activateUsers=J,a.authenticateOAuth2=C,a.authenticateWeb=j,a.createAndSetRole=H,a.createBroadcastGroup=K,a.createStructure=G,a.getBroadcastGroup=b,a.getConnectedUserId=N,a.getHeaders=u,a.getMetricValue=E,a.getRandomUser=A,a.getRoleByName=v,a.getRolesOfStructure=U,a.getSchoolByName=k,a.getUsersOfSchool=B,a.importUsers=V,a.linkRoleToUsers=F,a.searchUser=w,a.shareFile=q,a.uploadFile=L,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});
