(function(a,r){typeof exports=="object"&&typeof module<"u"?r(exports,require("k6/http"),require("k6"),require("https://jslib.k6.io/formdata/0.0.2/index.js")):typeof define=="function"&&define.amd?define(["exports","k6/http","k6","https://jslib.k6.io/formdata/0.0.2/index.js"],r):(a=typeof globalThis<"u"?globalThis:a||self,r(a["edifice-k6-commons"]={},a.http,a.k6,a.index_js))})(this,function(a,r,l,S){"use strict";var x=Object.defineProperty;var ee=(a,r,l)=>r in a?x(a,r,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[r]=l;var $=(a,r,l)=>(ee(a,typeof r!="symbol"?r+"":r,l),l);const m={COOKIE:0,OAUTH2:1};class b{constructor(t,s,o,n){$(this,"expiresAt");$(this,"token");$(this,"mode");$(this,"cookies");this.token=t,this.mode=s,this.cookies=n,this.expiresAt=Date.now()+o*1e3-3e3}isExpired(){return this.expiresAt<=Date.now()}getCookie(t){return this.cookies?this.cookies.filter(s=>s.name===t).map(s=>s.value)[0]:null}}const U=__ENV.BASE_URL,I=30*60,h=__ENV.ROOT_URL,d=function(e){let t;return e?e.mode===m.COOKIE?t={"x-xsrf-token":e.getCookie("XSRF-TOKEN")||""}:e.mode===m.OAUTH2?t={Authorization:`Bearer ${e.token}`}:t={}:t={},t},C=function(e,t){const s=r.get(`${h}/conversation/visible?search=${e}`,{headers:d(t)});return l.check(s,{"should get an OK response":n=>n.status==200}),s.json("users")[0].id},j=function(e){const t=r.get(`${h}/auth/oauth2/userinfo`,{headers:d(e)});return l.check(t,{"should get an OK response":s=>s.status==200,"should get a valid userId":s=>!!s.json("userId")}),t.json("userId")},E=function(e,t){let s={email:e,password:t,callBack:"",detail:""};const o=r.post(`${h}/auth/login`,s,{redirects:0});l.check(o,{"should redirect connected user to login page":c=>c.status===302,"should have set an auth cookie":c=>c.cookies.oneSessionId!==null&&c.cookies.oneSessionId!==void 0}),r.cookieJar().set(h,"oneSessionId",o.cookies.oneSessionId[0].value);const i=Object.keys(o.cookies).map(c=>({name:c,value:o.cookies[c][0].value}));return new b(o.cookies.oneSessionId[0].value,m.COOKIE,I,i)},A=function(e){return r.cookieJar().set(h,"oneSessionId",e.token),e},N=function(e,t,s,o){let n={grant_type:"password",username:e,password:t,client_id:s,client_secret:o,scope:"timeline userbook blog lvs actualites pronote schoolbook support viescolaire zimbra conversation directory homeworks userinfo workspace portal cas sso presences incidents competences diary edt infra auth"},i=r.post(`${h}/auth/oauth2/token`,n,{redirects:0});l.check(i,{"should get an OK response for authentication":u=>u.status==200,"should have set an access token":u=>!!u.json("access_token")});const c=i.json("access_token");return new b(c,m.OAUTH2,i.json("expires_in"))};function B(e,t){const s=(t||[]).map(o=>o.id);for(let o=0;o<1e3;o++){const n=e[Math.floor(Math.random()*e.length)];if(s.indexOf(n.id)<0)return n}throw"cannot.find.random.user"}const J=function(e,t){const s=r.get(`${U}/metrics`,{headers:d(t)});l.check(s,{"should get an OK response":n=>n.status==200});const o=s.body.split(`
`);for(let n of o)if(n.indexOf(`${e} `)===0)return parseFloat(n.substring(e.length+1).trim());return console.error("Metric",e,"not found"),null},p=__ENV.ROOT_URL;function y(e,t){let s=r.get(`${p}/directory/structure/admin/list`,{headers:d(t)});return JSON.parse(s.body).filter(o=>o.name===e)[0]}function G(e,t){let s=r.get(`${p}/directory/structure/${e.id}/users`,{headers:d(t)});if(s.status!==200)throw`Impossible to get users of ${e.id}`;return JSON.parse(s.body)}function V(e,t){let s=r.get(`${p}/directory/structure/${e.id}/users`,{headers:d(t)});s.status!=200&&l.fail(`Cannot fetch users of structure ${e.id} : ${s}`);const o=JSON.parse(s.body);for(let n=0;n<o.length;n++){const i=o[n];T(i)}}function T(e){if(e.code){const t={};t.login=e.login,t.activationCode=e.code,t.password="password",t.confirmPassword="password",t.acceptCGU="true";const s=r.post(`${p}/auth/activation`,t,{redirects:0,headers:{Host:"localhost"}});s.status!==302&&l.fail(`Could not activate user ${e.login} : ${s}`)}}function F(e,t,s,o){const i=R(e.id,o).filter(c=>s.indexOf(c.name)>=0);for(let c of i)if(c.roles.indexOf(t.name)>=0)console.log("Role already attributed to teachers");else{const u=d(o);u["content-type"]="application/json";const g={headers:u},f=JSON.stringify({groupId:c.id,roleIds:(c.roles||[]).concat([t.id])}),_=r.post(`${p}/appregistry/authorize/group?schoolId=${e.id}`,f,g);l.check(_,{"link role to structure":Z=>Z.status==200})}}function K(e,t,s){let o=y(e,s);if(o)console.log(`Structure ${e} already exists`);else{const n=d(s);n["content-type"]="application/json";const i=JSON.stringify({hasApp:t,name:e});let c=r.post(`${p}/directory/school`,i,n);c.status!==201&&(console.error(c.body),l.fail(`Could not create structure ${e}`)),o=y(e,s)}return o}function M(e,t,s){let o=y(e,s);if(o)console.log("School already exists");else{const n=new S.FormData;n.append("type","CSV"),n.append("structureName",e);let i,c,u;"teachers"in t?(i=t.teachers,c=t.students,u=t.responsables):i=t,n.append("Teacher",r.file(i,"enseignants.csv")),c&&n.append("Student",r.file(c,"eleves.csv")),u&&n.append("Relative",r.file(u,"responsables.csv"));const g=d(s);g["Content-Type"]="multipart/form-data; boundary="+n.boundary;const f={headers:g};r.post(`${p}/directory/wizard/import`,n.body(),f).status!=200&&l.fail(`Could not create structure ${e}`),o=y(e,s)}return o}function H(e,t,s){let o;if((t.parents||[]).map(i=>i.id).indexOf(e.id)>=0)console.log(`${t.name} is already a child of ${e.name}`),o=!1;else{const i=d(s);i["content-type"]="application/json",r.put(`${p}/directory/structure/${t.id}/parent/${e.id}`,"{}").status!==200&&l.fail(`Could not attach structure ${t.name} as a child of ${e.name}`),o=!0}return o}function L(e,t,s){const o=new S.FormData;o.append("type","CSV"),o.append("structureName",e.name),o.append("structureId",e.id),o.append("structureExternalId",e.externalId);let n,i,c;"teachers"in t?(n=t.teachers,i=t.students,c=t.responsables):n=t,o.append("Teacher",r.file(n,"enseignants.csv")),i&&o.append("Student",r.file(i,"eleves.csv")),c&&o.append("Relative",r.file(c,"responsables.csv"));const u=d(s);u["Content-Type"]="multipart/form-data; boundary="+o.boundary;const g={headers:u};return r.post(`${p}/directory/wizard/import`,o.body(),g)}function k(e,t,s){const o=d(s);o["content-type"]="application/json";let n=r.get(`${p}/directory/group/admin/list?translate=false&structureId=${t.id}`,{headers:o});return JSON.parse(n.body).filter(i=>i.subType==="BroadcastGroup"&&i.name===e)[0]}function D(e,t,s){let o=k(e,t,s);if(o)console.log("Broadcast group already existed");else{console.log("Creating broadcast group");const n=d(s);n["content-type"]="application/json";let i=JSON.stringify({name:e,structureId:t.id,subType:"BroadcastGroup"}),c=r.post(`${p}/directory/group`,i,{headers:n});l.check(c,{"create broadcast group":f=>f.status===201});const u=JSON.parse(c.body).id;i=JSON.stringify({name:e,autolinkTargetAllStructs:!0,autolinkTargetStructs:[],autolinkUsersFromGroups:["Teacher"]}),c=r.put(`${p}/directory/group/${u}`,i,{headers:n}),l.check(c,{"set broadcast group for teachers":f=>f.status===200});const g=w(t,s).id;c=r.post(`${p}/communication/v2/group/${g}/communique/${u}`,"{}",{headers:n}),l.check(c,{"open comm rule for broadcast group for teachers":f=>f.status===200}),o=k(e,t,s)}return o}function w(e,t){return R(e.id,t).filter(o=>o.name===`Teachers from group ${e.name}.`||o.name===`Enseignants du groupe ${e.name}.`)[0]}const O=__ENV.ROOT_URL;function v(e,t){let s=r.get(`${O}/appregistry/roles`,{headers:d(t)});return JSON.parse(s.body).filter(n=>n.name===e)[0]}function q(e,t){const s=`${e} - All - Stress Test`;let o=v(s,t);if(o)console.log(`Role ${s} already existed`);else{let n=r.get(`${O}/appregistry/applications/actions?actionType=WORKFLOW`,{headers:d(t)});l.check(n,{"get workflow actions":f=>f.status==200});const c=JSON.parse(n.body).filter(f=>f.name===e)[0].actions.map(f=>f[0]),u=d(t);u["content-type"]="application/json";const g={role:s,actions:c};n=r.post(`${O}/appregistry/role`,JSON.stringify(g),{headers:u}),console.log(n),l.check(n,{"save role ok":f=>f.status==201}),o=v(s,t)}return o}function R(e,t){let s=r.get(`${O}/appregistry/groups/roles?structureId=${e}`,{headers:d(t)});return l.check(s,{"get structure roles should be ok":o=>o.status==200}),JSON.parse(s.body)}const z=__ENV.ROOT_URL;function W(e,t){let s=d(t);const o=new S.FormData;o.append("file",r.file(e,"file.txt")),s["Content-Type"]="multipart/form-data; boundary="+o.boundary;let n=r.post(`${z}/workspace/document`,o.body(),{headers:s});return l.check(n,{"upload doc ok":i=>i.status===201}),JSON.parse(n.body)}const P=__ENV.ROOT_URL;function X(e,t,s){const o=d(s);o["content-type"]="application/json";const n=JSON.stringify(t);return r.put(`${P}/workspace/share/resource/${e}`,n,{headers:o})}const Y=__ENV.ROOT_URL;function Q(e,t,s){const o=r.post(`${Y}/communication/v2/group/${e}/communique/${t}`,"{}",{headers:d(s)});return o.status!==200&&(console.error(`Error while adding communication between ${e} -> ${t}`),console.error(o),l.fail(`could not add communication between ${e} -> ${t}`)),o}a.BASE_URL=U,a.Session=b,a.SessionMode=m,a.activateUser=T,a.activateUsers=V,a.addCommunicationBetweenGroups=Q,a.attachStructureAsChild=H,a.authenticateOAuth2=N,a.authenticateWeb=E,a.createAndSetRole=q,a.createBroadcastGroup=D,a.createEmptyStructure=K,a.createStructure=M,a.getBroadcastGroup=k,a.getConnectedUserId=j,a.getHeaders=d,a.getMetricValue=J,a.getRandomUser=B,a.getRoleByName=v,a.getRolesOfStructure=R,a.getSchoolByName=y,a.getTeacherRole=w,a.getUsersOfSchool=G,a.importUsers=L,a.linkRoleToUsers=F,a.searchUser=C,a.shareFile=X,a.switchSession=A,a.uploadFile=W,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});
